// MODEL

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã

// _—Ü–≤–µ—Ç–∞ –∑–∞–º–µ—Ç–æ–∫
const NOTE_COLORS = { // —Ü–≤–µ—Ç–∞ –∑–∞–º–µ—Ç–æ–∫
	YELLOW: "yellow",
	GREEN: "green",
	BLUE: "blue",
	PINK: "pink",
	VIOLET: "violet",
}

// –ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö

const model = {
	notes: [
		{
			id: 1,
			title: "Flexbox (CSS)",
			text: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
			color: NOTE_COLORS.YELLOW,
			isFavorite: true,
		},
		{
			id: 2,
			title: "–û–±—ä–µ–∫—Ç—ã (JavaScript)",
			text: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
			color: NOTE_COLORS.GREEN,
			isFavorite: false,
		},
	],

	deleteNote(id) {
		this.notes = this.notes.filter(note => note.id !== id);
	},
};

// VIEW

const view = {

	// –ö–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∑–∞–º–µ—Ç–æ–∫
	rootElement: document.getElementById("root"),

	// –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–º–µ—Ç–∫–∏
	createNoteElement(note) {

		// –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ
		const noteElement = document.createElement("div")
		noteElement.classList.add("noteElement")
		noteElement.classList.add(`noteElement--${note.color}`);
		noteElement.dataset.id = note.id;

		// –∑–∞–≥–æ–ª–æ–≤–æ–∫
		const titleElement = document.createElement("h3")
		titleElement.textContent = note.title;

		//—Ç–µ–∫—Å—Ç
		const textElement = document.createElement("p")
		textElement.textContent = note.text;

		// –∫–Ω–æ–ø–æ—á–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä 
		const controlsElement = document.createElement("div")
		controlsElement.classList.add("noteElement-controls");

		// –∫–Ω–æ–ø–∫–∞ –£–¥–∞–ª–µ–Ω–∏—è
		const deleteButton = document.createElement("button")
		deleteButton.classList.add("noteElement-delete");
		deleteButton.textContent = "üóë";

		// –∫–Ω–æ–ø–∫–∞ –≤ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
		const favoriteButton = document.createElement("button")
		favoriteButton.classList.add("noteElement-favorite");
		favoriteButton.textContent = note.isFavorite ? "‚òÖ" : "‚òÜ";

		// –∑–∞–∫–∏–Ω—É—Ç—å –≤ DOM
		noteElement.append(titleElement, controlsElement, textElement);
		controlsElement.append(favoriteButton, deleteButton);

		return noteElement;
	},

	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
	renderNotes(notes) {

		// _–æ—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
		this.rootElement.innerHTML = "";

		// _—Ñ—Ä–∞–≥–º–µ–Ω—Ç –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–º–µ—Ç–æ–∫
		const fragment = document.createDocumentFragment();

		// _–ø–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞ –∑–∞–º–µ—Ç–æ–∫
		notes.forEach((note) => {
			const noteElement = this.createNoteElement(note);
			fragment.append(noteElement);

		})

		// _–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
		this.rootElement.append(fragment);

	},

};

// CONTROLLER

const controller = {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	init() {
		view.renderNotes(model.notes);
		this.setupEventListeners();
	},

	// –ü—Ä–æ—Å–ª—É—à–∫–∞ —Å–æ–±—ã—Ç–∏–π
	setupEventListeners() {

		view.rootElement.addEventListener("click", (event) => {
			const clickedElement = event.target;
			const noteElement = clickedElement.closest('.noteElement');
			if (!noteElement) return;
			if (clickedElement.closest('.noteElement-delete')) {
				const noteId = Number(noteElement.dataset.id);
				this.handleDeleteNote(noteId);
			}
		});
	},

	handleDeleteNote(id) {
		model.deleteNote(id);
		view.renderNotes(model.notes);
	}
};











// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
controller.init();